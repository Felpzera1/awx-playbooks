---
- name: Instalar TeamViewer Host com Controle de Timeout
  hosts: all
  become: yes
  gather_facts: yes
  vars:
    teamviewer_version: "teamviewer-host_amd64.deb"
    teamviewer_url: "https://download.teamviewer.com/download/linux/teamviewer-host_amd64.deb"
    teamviewer_assignment_id: "0001CoABChC1doBwE6ER8IVwcOHTKq14EigIACAAAgAJAM3Fqx3YiSeapvhzY1fZ8C0OXCwtZ8U5tipZMciFfn2AGkCxyzcacCO8UWFdx9o9IUS-gm_1hFpKpbQu7dAn5AQyXkQ2JP8BzlG9TP3U_d60grO7ngCTd93lRX8CuELqctwvIAEQocTBxAM="

  tasks:
    - name: Verificar se TeamViewer já está instalado
      ansible.builtin.command:
        cmd: "which teamviewer || dpkg -l teamviewer-host"
      register: teamviewer_check
      ignore_errors: yes
      changed_when: false

    - name: Baixar TeamViewer Host (com timeout)
      ansible.builtin.get_url:
        url: "{{ teamviewer_url }}"
        dest: "/tmp/{{ teamviewer_version }}"
        mode: '0644'
        timeout: 30
        headers:
          User-Agent: "Wget/1.0"
      when: teamviewer_check.rc != 0
      async: 60
      poll: 10
      register: download_result

    - name: Verificar se download foi bem sucedido
      ansible.builtin.stat:
        path: "/tmp/{{ teamviewer_version }}"
      register: downloaded_file
      when: teamviewer_check.rc != 0

    - name: Falhar se download não completou
      ansible.builtin.fail:
        msg: "Download do TeamViewer falhou ou timeout"
      when: 
        - teamviewer_check.rc != 0
        - not downloaded_file.stat.exists

    - name: Instalar dependências
      ansible.builtin.apt:
        name:
          - wget
          - curl
          - libxtst6
          - libxrandr2
          - libglib2.0-0
          - libgdk-pixbuf2.0-0
        state: present
        update_cache: yes
      when: teamviewer_check.rc != 0

    - name: Instalar TeamViewer Host
      ansible.builtin.apt:
        deb: "/tmp/{{ teamviewer_version }}"
        state: present
      environment:
        DEBIAN_FRONTEND: noninteractive
      when: 
        - teamviewer_check.rc != 0
        - downloaded_file.stat.exists

    - name: Configurar aceitação de EULA
      ansible.builtin.blockinfile:
        path: /etc/teamviewer/global.conf
        block: |
          EulaAccepted = 1
          DataEulaAccepted = 1
          ClientAutoStart = 1
        create: yes
        mode: '0644'

    - name: Garantir que serviço está rodando
      ansible.builtin.systemd:
        name: teamviewerd
        state: started
        enabled: yes
        daemon_reload: yes

    - name: Aguardar serviço inicializar
      ansible.builtin.wait_for:
        port: 5938
        host: 127.0.0.1
        timeout: 30
      ignore_errors: yes

    - name: Executar assignment do TeamViewer
      ansible.builtin.shell:
        cmd: "timeout 30 teamviewer assignment --id '{{ teamviewer_assignment_id }}' --alias '{{ ansible_hostname }}'"
      register: assignment_result
      async: 45
      poll: 5
      ignore_errors: yes

    - name: Mostrar resultado do assignment
      ansible.builtin.debug:
        msg: "Resultado do assignment: {{ assignment_result.stdout }}"

    - name: Limpar arquivo temporário
      ansible.builtin.file:
        path: "/tmp/{{ teamviewer_version }}"
        state: absent
      ignore_errors: yes