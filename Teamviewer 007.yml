---
- name: Instalar e configurar TeamViewer Host de forma não interativa
  hosts: all
  become: yes
  gather_facts: yes
  vars:
    teamviewer_version: "teamviewer-host_amd64.deb"
    teamviewer_url: "https://download.teamviewer.com/download/linux/teamviewer-host_amd64.deb"
    teamviewer_assignment_id: "0001CoABChC1doBwE6ER8IVwcOHTKq14EigIACAAAgAJAM3Fqx3YiSeapvhzY1fZ8C0OXCwtZ8U5tipZMciFfn2AGkCxyzcacCO8UWFdx9o9IUS-gm_1hFpKpbQu7dAn5AQyXkQ2JP8BzlG9TP3U_d60grO7ngCTd93lRX8CuELqctwvIAEQocTBxAM="

  tasks:
    - name: Baixar TeamViewer Host
      ansible.builtin.get_url:
        url: "{{ teamviewer_url }}"
        dest: "/tmp/{{ teamviewer_version }}"
        mode: '0644'

    - name: Instalar dependências necessárias
      ansible.builtin.apt:
        name:
          - libxtst6
          - libxrandr2
          - libglib2.0-0
          - libgdk-pixbuf2.0-0
          - libpango1.0-0
          - libcairo2
          - libjpeg62
          - libpng16-16
          - libsm6
          - libice6
          - libxinerama1
          - libxdamage1
          - libxfixes3
          - libxcomposite1
          - libxcursor1
          - libasound2
          - libnss3
          - libnspr4
          - libdbus-1-3
        state: present
        update_cache: yes

    - name: Criar diretório de configuração do TeamViewer
      ansible.builtin.file:
        path: /etc/teamviewer
        state: directory
        mode: '0755'

    - name: Configurar aceitação de EULA ANTES da instalação
      ansible.builtin.copy:
        dest: /etc/teamviewer/global.conf
        content: |
          # TeamViewer global configuration
          # Auto-generated by Ansible
          EulaAccepted = 1
          DataEulaAccepted = 1
          ClientAutoStart = 1
          AssignmentsEnabled = 1
        mode: '0644'

    - name: Instalar TeamViewer Host de forma não interativa
      ansible.builtin.apt:
        deb: "/tmp/{{ teamviewer_version }}"
        state: present
      environment:
        DEBIAN_FRONTEND: noninteractive

    - name: Parar serviço TeamViewer para configuração
      ansible.builtin.systemd:
        name: teamviewerd
        state: stopped
      ignore_errors: yes

    - name: Aguardar parada completa do serviço
      ansible.builtin.pause:
        seconds: 5

    - name: Configurar assignment via arquivo
      ansible.builtin.copy:
        dest: /etc/teamviewer/client.conf
        content: |
          # TeamViewer client configuration
          [Assignment]
          ID = {{ teamviewer_assignment_id }}
          Alias = {{ ansible_hostname }}
          Group = Linux Hosts
        mode: '0644'

    - name: Reiniciar serviço TeamViewer
      ansible.builtin.systemd:
        name: teamviewerd
        state: started
        enabled: yes
        daemon_reload: yes

    - name: Aguardar inicialização do serviço
      ansible.builtin.wait_for:
        path: /var/run/teamviewerd.pid
        state: present
        timeout: 30

    - name: Verificar se assignment foi aplicado
      ansible.builtin.shell:
        cmd: teamviewer assignment --status
      register: assignment_status
      changed_when: false

    - name: Mostrar status do assignment
      ansible.builtin.debug:
        msg: "{{ assignment_status.stdout }}"

    - name: Forçar assignment via API se necessário
      ansible.builtin.shell:
        cmd: |
          teamviewer assignment --id {{ teamviewer_assignment_id }} --alias "{{ ansible_hostname }}" --reassign
        executable: /bin/bash
      register: force_assignment
      ignore_errors: yes
      when: assignment_status.stdout is defined and 'assigned' not in assignment_status.stdout

    - name: Verificar informações do TeamViewer
      ansible.builtin.command:
        cmd: teamviewer --info
      register: teamviewer_info
      changed_when: false

    - name: Mostrar informações finais
      ansible.builtin.debug:
        msg: "TeamViewer Info: {{ teamviewer_info.stdout }}"

    - name: Limpar arquivo de instalação
      ansible.builtin.file:
        path: "/tmp/{{ teamviewer_version }}"
        state: absent